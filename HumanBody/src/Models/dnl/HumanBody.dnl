use sendFood with type Food!
use measureHunger with type Hunger!

generates output on Food with type Food!
accepts input on Hunger with type Hunger!

Initialize variables
<%
	sendFood = new Food(new Integer(0));
	measureHunger = new Hunger(new Integer(10));
%>!

to start passivate in isHunger!
when in isHunger and receive Hunger go to isStarving!

hold in isStarving for time 1!
after isStarving output Food!
from isStarving go to isHunger!

external event for isHunger with Hunger
<%
	for(int i = 0; i < messageList.size(); i++)
	{
		Hunger valueReceived = (Depth)messageList.get(i).getData();
		measureHunger = (Hunger)messageList.get(0).getData();
		sendFood = new Food(new Integer(value);
		System.out.println("Value: " + value);
	}
%>!

//On the transition going out from the state, perform the actions
output event for isStarving
<%
	output.add(outFood, sendFood);
%>!